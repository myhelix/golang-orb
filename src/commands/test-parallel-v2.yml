description: >
  Run tests
parameters:
  test_type:
    description: The test type to run.
    type: enum
    enum: ['acceptance', 'unit', 'e2e']
  ginkgo_params:
    type: string
    default: -r --procs=4 --compilers=4 --randomize-all --randomize-suites --fail-fast --keep-going --race --trace --junit-report=report.xml --json-report=report.json --output-dir=test-results/ --timeout=5m --poll-progress-after=120s --poll-progress-interval=30s
    description: "flags to add to the ginkgo command (see ginkgo -h)"

steps:
  - aws-cli/setup
  - run:
      name: install ginkgo
      command: |
        echo "installing ginkgo v2"
        GO111MODULE=on go install github.com/onsi/ginkgo/v2/ginkgo
  - run:
      name: Act as AWS admin
      command: |
        # Manually assume role to get temporary aws credentials
        assume_creds=$(aws sts assume-role --role-session-name "${CIRCLE_USERNAME:-bot}-circleci" --role-arn arn:aws:iam::$AWS_ACCOUNT_ID:role/$ASSUME_AWS_PROFILE)
        echo "export AWS_ACCESS_KEY_ID=$(echo $assume_creds | jq -r .Credentials.AccessKeyId)" >> $BASH_ENV
        echo "export AWS_SECRET_ACCESS_KEY=$(echo $assume_creds | jq -r .Credentials.SecretAccessKey)" >> $BASH_ENV
        echo "export AWS_SESSION_TOKEN=$(echo $assume_creds | jq -r .Credentials.SessionToken)" >> $BASH_ENV
        echo "export AWS_SDK_LOAD_CONFIG=1" >> $BASH_ENV
  - run:
      name: setup env
      command: |
        echo "export GO_ENV=${ENVIRONMENT}" >> $BASH_ENV
        echo "export PROJECT=${PROJECT_NAME:=$CIRCLE_PROJECT_REPONAME}" >> $BASH_ENV
  - run:
      name: list env
      command: env
  - run:
      name: run ginkgo
      environment:
        TEST_TYPE: <<parameters.test_type>>
      command: |
        if [ -d test-results ]; then
          rm -rf test-results
        fi
        mkdir test-results

        EXTRA_PARMS=""
        if [[ 'unit' == "$TEST_TYPE" ]]; then
          echo "Running all tests except acceptance tests"
          EXTRA_PARAMS="--cover --coverprofile=cover.out --skip-package=acceptance,e2e"
        elif [[ 'e2e' == "$TEST_TYPE" ]]; then
          echo "Running E2E tests"
          EXTRA_PARAMS="e2e"
        else
          echo "Running acceptance tests"
          EXTRA_PARAMS="acceptance"
        fi
        echo $(go list -f='{{.Dir}}' ./... | circleci tests split --split-by=timings --timings-type=classname)
        ginkgo << parameters.ginkgo_params >> $EXTRA_PARAMS $(go list -f='{{.Dir}}' ./... | circleci tests split --split-by=timings)
