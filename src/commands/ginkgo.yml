description: >
  Install ginkgo if necessary and run tests

parameters:
  environment:
    description: what runner to run on
    type: string
  golang_version:
    type: enum
    enum: ['1.13.15', '1.14.15', '1.15.10', '1.16.2']
    description: >
      NOTE these are installed by https://github.com/myhelix/circleci-runner/blob/master/lib/circleci-runner-stack.ts#L152..L156
  org:
    type: string
    default: myhelix
  project_name:
    type: string
    description: "Project name, must match github repo name"
  test_type:
    description: The test type to run.
    type: enum
    enum: ['acceptance', 'unit']
  ginkgo_params:
    type: string
    default: -failFast  -keepGoing  -nodes 4  -r  -randomizeAllSpecs  -randomizeSuites  -timeout 5m
    description: "flags to add to the ginkgo command (see ginkgo -h)"
  go_env:
    type: string
    description: "Set the environment Variable GO_ENV"
    default: GOENVORENV

steps:
  - run:
      name: set goenv
      commands: |
        if [[ -z "<< pipeline.parameters.go_env >>"]]; then
          echo "export GOENVORENV=<< pipeline.parameters.environment >>" >> $BASH_ENV
          else echo "export GOENVORENV=<< pipeline.parameters.go_env >>" >> $BASH_ENV
        fi
  - run:
      name: setup golang
      environment:
        GO_ENV: << parameters.go_env >>
      command: goenv version
  - run:
      name: install ginkgo
      environment:
        GO_ENV: << parameters.go_env >>
      command: |
        if [ -z "$(which ginkgo)" ]; then
          echo "Installing ginkgo"
          GO111MODULE=on go get github.com/onsi/ginkgo/ginkgo@8382b23d18dbaaff8e5f7e83784c53ebb8ec2f47
        fi
  - run:
      name: run ginkgo
      environment:
        ENVIRONMENT: << parameters.environment >>
        GOENV_VERSION: << parameters.golang_version >>
        PROJECT_NAME: << parameters.project_name >>
        TEST_TYPE: <<parameters.test_type>>
        GO_ENV: << parameters.go_env >>
      command: |
        EXTRA_PARMS=""
        if [[ 'unit' == "$TEST_TYPE" ]]; then
          echo "Running all tests except acceptance tests"
          EXTRA_PARAMS="-cover -coverprofile cover.out -skipPackage acceptance"
        else
          echo "Running acceptance tests"
          EXTRA_PARAMS="acceptance"
        fi
        ginkgo << parameters.ginkgo_params >> $EXTRA_PARAMS
