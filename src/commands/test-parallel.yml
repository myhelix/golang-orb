description: >
  Run tests
parameters:
  test_type:
    description: The test type to run.
    type: enum
    enum: ['acceptance', 'unit']
  ginkgo_params:
    type: string
    default: -failFast  -keepGoing  -nodes 4  -r  -randomizeAllSpecs  -randomizeSuites  -timeout 5m
    description: "flags to add to the ginkgo command (see ginkgo -h)"

steps:
  - assume_oidc_role
  - run:
      name: install ginkgo
      command: |
        if [ -z "$(which ginkgo)" ]; then
          echo "Installing ginkgo"
          go get github.com/onsi/ginkgo/ginkgo
        fi
  - run:
      name: setup env
      command: |
        echo "export GO_ENV=${ENVIRONMENT}" >> $BASH_ENV
        echo "export PROJECT=${PROJECT_NAME:=$CIRCLE_PROJECT_REPONAME}" >> $BASH_ENV
  - run:
      name: list env
      command: env
  - run:
      name: run ginkgo
      environment:
        TEST_TYPE: <<parameters.test_type>>
      command: |
        EXTRA_PARMS=""
        if [[ 'unit' == "$TEST_TYPE" ]]; then
          echo "Running all tests except acceptance tests"
          EXTRA_PARAMS="-cover -coverprofile cover.out -skipPackage acceptance"
        else
          echo "Running acceptance tests"
          EXTRA_PARAMS="acceptance"
        fi
        echo $(go list -f='{{.Dir}}' ./... | circleci tests split --split-by=timings --timings-type=classname)
        ginkgo << parameters.ginkgo_params >> $EXTRA_PARAMS $(go list -f='{{.Dir}}' ./... | circleci tests split --split-by=timings)
