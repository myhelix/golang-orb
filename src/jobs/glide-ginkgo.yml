description: >
  Glide and then run tests using ginkgo

parameters:
  environment:
    description: what runner to run on
    type: string
  golang_version:
    type: enum
    enum: ['1.13.15', '1.14.15', '1.15.10', '1.16.2', '1.17', '1.18', '1.19']
    description: >
      NOTE these are installed by https://github.com/myhelix/circleci-runner/blob/master/lib/circleci-runner-stack.ts#L152..L156
  golang_version_short:
    description: >
      The version of the golang executor to use.
      NOTE these are installed by https://github.com/myhelix/circleci-runner/blob/master/lib/circleci-runner-stack.ts#L152..L156
      While we don't have a direct dependency here, other steps do.
    type: enum
    enum: ['1.13', '1.14', '1.15', '1.16', '1.17', '1.18', '1.19']
  org:
    type: string
    default: myhelix
  project_name:
    type: string
    description: "Project name, must match github repo name"
  test_type:
    description: The test type to run.
    type: enum
    enum: ['acceptance', 'unit']
  ginkgo_params:
    type: string
    default: -failFast  -keepGoing  -nodes 4  -r  -randomizeAllSpecs  -randomizeSuites  -timeout 5m
    description: "flags to add to the ginkgo command (see ginkgo -h)"
  go_env:
    type: string
    default: ""

executor:
  name: default
  golang_version_short: << parameters.golang_version_short >>

environment:
  PROJECT_NAME: << parameters.project_name >>
  GOPATH: "/home/circleci/project/go"

working_directory: /home/circleci/project/go/src/github.com/<< parameters.org >>/<< parameters.project_name >>

steps:
  - sanitize-identity
  - checkout
  - assume_oidc_role
  - setup_remote_docker:
      version: default
  - glide-install
  - ginkgo:
      environment: << parameters.environment >>
      golang_version: << parameters.golang_version >>
      project_name: << parameters.project_name >>
      org: << parameters.org >>
      test_type: <<parameters.test_type>>
      ginkgo_params: << parameters.ginkgo_params >>
      go_env: << parameters.go_env >>
