description: >
  Run ginkgo tests on a standard circleci build agent

parameters:
  golang_version_short:
    description: >
      The version of the golang executor to use.
      NOTE these are installed by https://github.com/myhelix/circleci-runner/blob/main/lib/circleci-runner-stack.ts#L160
      While we don't have a direct dependency here, other steps do.
      See https://hub.docker.com/r/cimg/go/tags for available versions
    type: string
  test_type:
    description: The test type to run.
    type: enum
    enum: ['acceptance', 'unit', 'e2e']
  project_name:
    type: string
    description: "Project name, must match github repo name"
    default: ""
  ginkgo_params:
    type: string
    default: -r --procs=4 --compilers=4 --randomize-all --randomize-suites --fail-fast --keep-going --race --trace --junit-report=report.xml --json-report=report.json --output-dir=test-results/ --timeout=5m --poll-progress-after=120s --poll-progress-interval=30s
    description: "flags to add to the ginkgo command (see ginkgo -h)"
  resource_class:
    default: xlarge
    description: Type of the resource class
    type: string
  use_circleci_ip_ranges:
    description: "Whether to use the circle ci ip ranges."
    type: boolean
    default: false

circleci_ip_ranges: << parameters.use_circleci_ip_ranges >>

executor:
  name: default
  golang_version_short: << parameters.golang_version_short >>

resource_class: << parameters.resource_class >>

environment:
  PROJECT_NAME: << parameters.project_name >>

steps:
  - checkout
  - assume_oidc_role
  - go/load-cache
  - go/mod-download
  - go/save-cache
  - test-v2:
      test_type: << parameters.test_type >>
      ginkgo_params: << parameters.ginkgo_params >>
  - store_test_results:
      path: test-results
