description: Apply database migrations

parameters:
  environment:
    description: what runner to run on
    type: string
  org:
    type: string
    default: myhelix
  project_name:
    type: string
    description: "Project name, must match github repo name"

# Use the runner
machine: true
resource_class: << parameters.org >>/<< parameters.environment >>

environment:
  ENVIRONMENT: << parameters.environment >>
  PROJECT_NAME: << paramters.project_name >>

working_directory: /home/circleci/go/<< parameters.golang_version >>/src/github.com/<< parameters.org >>/<< parameters.project_name >>

steps:
  - checkout
  - run:
      name: run goose
      command: |
        set -euxo pipefail
        eval "$(hops db config -f goose -e "$ENVIRONMENT" -s "$PROJECT_NAME" -u migration)"
        echo "Running migrations on $PROJECT_NAME@$DB_HOST:$DB_PORT as $DB_USER"
        goose --env "$ENVIRONMENT" up
